plugins {
    id('com.android.application')
    id('kotlin-android')
}

def configValue = { id ->
    return new XmlParser()
        .parse(file("${rootProject.projectDir.path}/app/src/main/res/values/config.xml"))
        .string.find { it.@name.equals id }.text()
}

android {
    compileSdkVersion 31
    buildToolsVersion '30.0.3'

    defaultConfig {
        applicationId "com.draco.ludere.${configValue('config_id')}"
        minSdkVersion 21
        targetSdkVersion 31
        versionCode 1
        versionName '1.0'
        resConfigs 'en'
    }

    signingConfigs {
        release {
            storeFile file("${rootProject.projectDir}/ludere.jks")
            storePassword 'ludere'
            keyAlias 'key0'
            keyPassword 'ludere'
        }
    }

    buildTypes {
        release {
            minifyEnabled true
            shrinkResources true
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
            signingConfig signingConfigs.release
        }
    }

    splits {
        abi {
            enable true
            include 'x86', 'x86_64', 'armeabi-v7a', 'arm64-v8a'
            universalApk true
        }
    }

    buildFeatures {
        viewBinding true
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = '1.8'
    }
}

task prepareCore {
    doLast {
        for (abi in ['x86', 'x86_64', 'armeabi-v7a', 'arm64-v8a']) {
            var jniAbiFolder = file("${rootProject.projectDir}/app/src/main/jniLibs/$abi")

            if (jniAbiFolder.exists() && jniAbiFolder.list().length > 0)
                continue

            jniAbiFolder.mkdirs()

            download {
                src "https://buildbot.libretro.com/nightly/android/latest/$abi/${configValue('config_core')}_libretro_android.so.zip"
                dest "${rootProject.projectDir}/app/src/main/jniLibs/$abi"
            }
            copy {
                from zipTree("${rootProject.projectDir}/app/src/main/jniLibs/$abi/${configValue('config_core')}_libretro_android.so.zip")
                into "${rootProject.projectDir}/app/src/main/jniLibs/$abi"
                rename "${configValue('config_core')}_libretro_android.so", "libcore.so"
            }
            delete {
                delete "${rootProject.projectDir}/app/src/main/jniLibs/$abi/${configValue('config_core')}_libretro_android.so.zip"
            }
        }
    }
}
preBuild.dependsOn prepareCore

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation "org.jetbrains.kotlin:kotlin-stdlib:$kotlin_version"
    implementation 'org.jetbrains.kotlinx:kotlinx-coroutines-android:1.5.1-native-mt'

    implementation 'androidx.core:core-ktx:1.7.0'
    implementation 'androidx.appcompat:appcompat:1.4.0'

    implementation 'androidx.activity:activity-ktx:1.4.0'
    implementation 'androidx.lifecycle:lifecycle-viewmodel-ktx:2.4.0'
    implementation 'androidx.lifecycle:lifecycle-livedata-ktx:2.4.0'
    implementation 'androidx.lifecycle:lifecycle-runtime-ktx:2.4.0'

    implementation 'com.github.swordfish90:radialgamepad:0.6.0'
    implementation 'com.github.swordfish90:libretrodroid:0.6.2'

    implementation 'io.reactivex.rxjava2:rxandroid:2.1.1'
}
